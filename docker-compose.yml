version: '3'

services:
  app:
    container_name: ordersvc
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
    tty: true
    build:
      context: .
      dockerfile: ./script/Dockerfile
    ports:
      - 8082:8082
    restart: on-failure
    command: bash -c "
      /app/app -migrateup=true &&
      /app/app -grpc=true"
    depends_on:
      redis:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    networks:
      - brick
  redis:
    container_name: redis_container
    image: redis:7.2-alpine
    restart: always
    ports:
      - '6380:6379'
    volumes: 
      - redis:/data
    command: redis-server
    networks:
      - brick
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
  postgresql:
    image: postgres:16.2-alpine
    container_name: postgresql_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '5432:5432'
    volumes: 
      - postgresql:/data
    networks:
      - brick
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - brick
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 19092:19092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - brick
volumes:
  postgresql:
    driver: local
  redis:
    driver: local
networks:
  brick:
    driver: bridge
